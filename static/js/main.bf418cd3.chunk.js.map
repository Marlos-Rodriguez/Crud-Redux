{"version":3,"sources":["Components/Header.js","config/axios.js","actions/productosAction.js","types/index.js","Components/Producto.js","Components/Productos.js","actions/alertaAction.js","Components/NuevoProducto.js","Components/EditarProducto.js","Reducers/productosReducer.js","Reducers/alertaReducer.js","Reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","clienteAxios","axios","create","baseURL","agregarProducto","type","payload","agregarProductoExito","producto","agregarProductoError","estado","descargarProductos","descargarProductosExitosa","productos","descargarProductosError","obtenerProductoEliminar","id","eliminarProductoExito","eliminarProductoError","obtenerProductosEditarAction","editarProducto","editarProductoExito","editarProductoError","Producto","dispatch","useDispatch","history","useHistory","confirmarEliminarProducto","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","a","delete","console","log","borrarProductoAction","nombre","precio","redirecionarEdicion","ObtenerProductoEditar","push","onClick","Productos","useEffect","get","respuesta","data","useSelector","state","error","cargando","loading","scope","length","map","key","crearAlerta","alerta","ocultarAlerta","NuevoProducto","useState","guardarnombre","guardarprecio","post","crearNuevoProductoAction","classes","msg","onSubmit","e","preventDefault","trim","mostrarAlerta","placeholder","name","onChange","target","Number","EditarProducto","guardarProducto","productoeditar","onChageFormulario","put","editarProductoAction","initialState","productoeliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bf418cd3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\r\n      <div className=\"container\">\r\n        <h1>\r\n          <Link to={\"/\"} className=\"text-light\">\r\n            Crud React, Redux, REST API & Axios\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n      <Link\r\n        to={\"/productos/nuevo\"}\r\n        className=\"btn btn-danger nuevo-post d-block d-md-inline-block\"\r\n      >\r\n        Agregar Producto &#43;\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst clienteAxios = axios.create({\r\n  baseURL: \"https://api-crudredux.herokuapp.com/\",\r\n});\r\n\r\nexport default clienteAxios;\r\n","import {\r\n  AGREGAR_PRODUCTO,\r\n  AGREGAR_PRODUCTO_EXITO,\r\n  AGREGAR_PRODUCTO_ERROR,\r\n  COMENZAR_DESCARGA_PRODUCTOS,\r\n  DESCARGA_PRODUCTOS_EXITO,\r\n  DESCARGA_PRODUCTOS_ERROR,\r\n  OBTENER_PRODUCTO_ELIMINAR,\r\n  PRODUCTO_ELIMINADO_EXITO,\r\n  PRODUCTO_ELIMINADO_ERROR,\r\n  OBTENER_PRODUCTO_EDITAR,\r\n  COMENZAR_EDICION_PRODUCTO,\r\n  PRODUCTO_EDITADO_EXITO,\r\n  PRODUCTO_EDITADO_ERROR,\r\n} from \"../types\";\r\n\r\nimport clienteAxios from \"../config/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch(agregarProducto());\r\n\r\n    try {\r\n      //insertar en la API\r\n      await clienteAxios.post(\"/productos\", producto);\r\n\r\n      //si todo sale bien, actualizar el state\r\n      dispatch(agregarProductoExito(producto));\r\n\r\n      //Alerta de exito\r\n      Swal.fire(\"Correcto\", \"El producto se agrego correctamente\", \"success\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      //si hay un error cambiar el state\r\n      dispatch(agregarProductoError(true));\r\n\r\n      //Alerta de error\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Un error\",\r\n        text: \"Hubo un error, prueba de nuevo\",\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n  type: AGREGAR_PRODUCTO,\r\n  payload: true,\r\n});\r\n\r\n//Si el producto se guarda en la base de datos\r\nconst agregarProductoExito = (producto) => ({\r\n  type: AGREGAR_PRODUCTO_EXITO,\r\n  payload: producto,\r\n});\r\n\r\nconst agregarProductoError = (estado) => ({\r\n  type: AGREGAR_PRODUCTO_ERROR,\r\n  payload: estado,\r\n});\r\n\r\n//Funcion que descarga los productos de la base de datos\r\nexport function obtenerProductosAction() {\r\n  return async (dispatch) => {\r\n    dispatch(descargarProductos());\r\n\r\n    try {\r\n      const respuesta = await clienteAxios.get(\"/productos\");\r\n      dispatch(descargarProductosExitosa(respuesta.data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(descargarProductosError());\r\n    }\r\n  };\r\n}\r\n\r\nconst descargarProductos = () => ({\r\n  type: COMENZAR_DESCARGA_PRODUCTOS,\r\n  payload: true,\r\n});\r\n\r\nconst descargarProductosExitosa = (productos) => ({\r\n  type: DESCARGA_PRODUCTOS_EXITO,\r\n  payload: productos,\r\n});\r\n\r\nconst descargarProductosError = () => ({\r\n  type: DESCARGA_PRODUCTOS_ERROR,\r\n  payload: true,\r\n});\r\n\r\n//Selecciona y elimina el producto\r\nexport function borrarProductoAction(id) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerProductoEliminar(id));\r\n\r\n    try {\r\n      await clienteAxios.delete(`/productos/${id}`);\r\n      dispatch(eliminarProductoExito());\r\n\r\n      //Si se elimina Mostrar alerta\r\n      Swal.fire(\r\n        \"Eliminado\",\r\n        \"Tu producto fue Eliminado correctamente\",\r\n        \"success\"\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(eliminarProductoError());\r\n    }\r\n  };\r\n}\r\n\r\nconst obtenerProductoEliminar = (id) => ({\r\n  type: OBTENER_PRODUCTO_ELIMINAR,\r\n  payload: id,\r\n});\r\n\r\nconst eliminarProductoExito = () => ({\r\n  type: PRODUCTO_ELIMINADO_EXITO,\r\n});\r\n\r\nconst eliminarProductoError = () => ({\r\n  type: PRODUCTO_ELIMINADO_ERROR,\r\n  payload: true,\r\n});\r\n\r\n//Colocar producto en edicion\r\nexport function ObtenerProductoEditar(producto) {\r\n  return (dispatch) => {\r\n    dispatch(obtenerProductosEditarAction(producto));\r\n  };\r\n}\r\n\r\nconst obtenerProductosEditarAction = (producto) => ({\r\n  type: OBTENER_PRODUCTO_EDITAR,\r\n  payload: producto,\r\n});\r\n\r\n//Edita un registro en la API y state\r\nexport function editarProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch(editarProducto());\r\n\r\n    try {\r\n      await clienteAxios.put(`/productos/${producto.id}`, producto);\r\n      dispatch(editarProductoExito(producto));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(editarProductoError());\r\n    }\r\n  };\r\n}\r\n\r\nconst editarProducto = () => ({\r\n  type: COMENZAR_EDICION_PRODUCTO,\r\n});\r\n\r\nconst editarProductoExito = (producto) => ({\r\n  type: PRODUCTO_EDITADO_EXITO,\r\n  payload: producto,\r\n});\r\n\r\nconst editarProductoError = () => ({\r\n  type: PRODUCTO_EDITADO_ERROR,\r\n  payload: true,\r\n});\r\n","//Creacion\r\nexport const AGREGAR_PRODUCTO = \"AGREGAR_PRODUCTO\";\r\nexport const AGREGAR_PRODUCTO_EXITO = \"AGREGAR_PRODUCTO_EXITO\";\r\nexport const AGREGAR_PRODUCTO_ERROR = \"AGREGAR_PRODUCTO_ERROR\";\r\n\r\n//Descarga\r\nexport const COMENZAR_DESCARGA_PRODUCTOS = \"COMENZAR_DESCARGA_PRODUCTOS\";\r\nexport const DESCARGA_PRODUCTOS_EXITO = \"DESCARGA_PRODUCTOS_EXITO\";\r\nexport const DESCARGA_PRODUCTOS_ERROR = \"DESCARGA_PRODUCTOS_ERROR\";\r\n\r\n//Eliminar\r\nexport const OBTENER_PRODUCTO_ELIMINAR = \"OBTENER_PRODUCTO_ELIMINAR\";\r\nexport const PRODUCTO_ELIMINADO_EXITO = \"PRODUCTO_ELIMINADO_EXITO\";\r\nexport const PRODUCTO_ELIMINADO_ERROR = \"PRODUCTO_ELIMINADO_ERROR\";\r\n\r\n//Edicion\r\nexport const OBTENER_PRODUCTO_EDITAR = \"OBTENER_PRODUCTO_EDITAR\";\r\nexport const COMENZAR_EDICION_PRODUCTO = \"COMENZAR_EDICION_PRODUCTO\";\r\nexport const PRODUCTO_EDITADO_EXITO = \"PRODUCTO_EDITADO_EXITO\";\r\nexport const PRODUCTO_EDITADO_ERROR = \"PRODUCTO_EDITADO_ERROR\";\r\n\r\nexport const MOSTRAR_ALERTA = \"MOSTRAR_ALERTA\";\r\nexport const OCULTAR_ALERTA = \"OCULTAR_ALERTA\";\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  borrarProductoAction,\r\n  ObtenerProductoEditar,\r\n} from \"../actions/productosAction\";\r\n\r\nconst Producto = ({ producto }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory(); //Habilitar History para redireccion\r\n\r\n  //Confirmar si desea eliminarlo\r\n  const confirmarEliminarProducto = (id) => {\r\n    //Preguntar al usuario\r\n    Swal.fire({\r\n      title: \"¿Estas seguro?\",\r\n      text: \"Un producto eliminado no se puede recuperar\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Si, eliminar\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        //pasarlo al Action\r\n        dispatch(borrarProductoAction(id));\r\n      }\r\n    });\r\n  };\r\n\r\n  const { nombre, precio, id } = producto;\r\n\r\n  //Funcion que redirige de forma programada\r\n  const redirecionarEdicion = (producto) => {\r\n    dispatch(ObtenerProductoEditar(producto));\r\n    history.push(`/productos/editar/${producto.id}`);\r\n  };\r\n  return (\r\n    <tr>\r\n      <td>{nombre}</td>\r\n      <td>\r\n        <span className=\"font-weight-bold\">$ {precio}</span>\r\n      </td>\r\n      <td className=\"acciones\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => redirecionarEdicion(producto)}\r\n          className=\"btn btn-primary mr-2\"\r\n        >\r\n          Editar\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n          onClick={() => confirmarEliminarProducto(id)}\r\n        >\r\n          Eliminar\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Producto;\r\n","import React, { Fragment, useEffect } from \"react\";\r\n\r\nimport Producto from \"./Producto\";\r\n\r\n//Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { obtenerProductosAction } from \"../actions/productosAction\";\r\n//<div></div>\r\n\r\nconst Productos = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    //Consultar la API\r\n    const cargarProductos = () => dispatch(obtenerProductosAction());\r\n    cargarProductos();\r\n  }, []);\r\n\r\n  //obtener state\r\n  const productos = useSelector((state) => state.productos.productos);\r\n  const error = useSelector((state) => state.productos.error);\r\n  const cargando = useSelector((state) => state.productos.loading);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"text-center my-5\"> Listado de Productos</h2>\r\n      {error ? (\r\n        <p className=\"font-weight-bold alert alert-danger text-center\">\r\n          Hubo un error\r\n        </p>\r\n      ) : null}\r\n      {cargando ? (\r\n        <p className=\"alert alert-success text-center w-100\">Cargando...</p>\r\n      ) : null}\r\n      <table className=\"table table-striped\">\r\n        <thead className=\"bg-primary table-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productos.length > 0 ? (\r\n            productos.map((producto) => (\r\n              <Producto key={producto.id} producto={producto} />\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td>No hay Productos</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Productos;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../types\";\r\n\r\n//Muestra una alerta\r\nexport function mostrarAlerta(alerta) {\r\n  return (dispatch) => {\r\n    dispatch(crearAlerta(alerta));\r\n  };\r\n}\r\n\r\nconst crearAlerta = (alerta) => ({\r\n  type: MOSTRAR_ALERTA,\r\n  payload: alerta,\r\n});\r\n\r\n//Ocultar alerta\r\nexport function ocultarAlertaAction() {\r\n  return (dispatch) => {\r\n    dispatch(ocultarAlerta());\r\n  };\r\n}\r\n\r\nconst ocultarAlerta = () => ({\r\n  type: OCULTAR_ALERTA,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//Actions de Redux\r\nimport { crearNuevoProductoAction } from \"../actions/productosAction\";\r\nimport { mostrarAlerta, ocultarAlertaAction } from \"../actions/alertaAction\";\r\nconst NuevoProducto = ({ history }) => {\r\n  //state del componente\r\n  const [nombre, guardarnombre] = useState(\"\");\r\n  const [precio, guardarprecio] = useState(0);\r\n\r\n  //Utilizarr use Dispatch y te crea una funcion\r\n  const dispatch = useDispatch();\r\n\r\n  //Acceder al state del store\r\n  const cargando = useSelector((state) => state.productos.loading);\r\n  const error = useSelector((state) => state.productos.error);\r\n  const alerta = useSelector((state) => state.alerta.alerta);\r\n\r\n  //mandar llamar el action de productoAction\r\n  const agregarProducto = (producto) =>\r\n    dispatch(crearNuevoProductoAction(producto));\r\n\r\n  //Cuando el usuario haga submit\r\n  const submitNuevoProducto = (e) => {\r\n    e.preventDefault();\r\n\r\n    //validar formulario\r\n    if (nombre.trim() === \"\" || precio <= 0) {\r\n      const alerta = {\r\n        msg: \"Ambos campos son obligatorios\",\r\n        classes: \"alert alert-danger text-center text-uppercase p3\",\r\n      };\r\n      dispatch(mostrarAlerta(alerta));\r\n      return;\r\n    }\r\n\r\n    //Si no hay errores\r\n    dispatch(ocultarAlertaAction());\r\n\r\n    //crear el nuevo producto\r\n    agregarProducto({\r\n      nombre,\r\n      precio,\r\n    });\r\n\r\n    //Redireccionar\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"card mt-4\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"text-center mb-4 font-weight-bold\">\r\n              Agregar nuevo prodcuto\r\n            </h2>\r\n            {alerta ? <p className={alerta.classes}>{alerta.msg}</p> : null}\r\n            <form onSubmit={submitNuevoProducto}>\r\n              <div className=\"form-group\">\r\n                <label>Nombre Producto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre Producto\"\r\n                  name=\"nombre\"\r\n                  value={nombre}\r\n                  onChange={(e) => guardarnombre(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Precio Producto</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Precio Producto\"\r\n                  name=\"precio\"\r\n                  value={precio}\r\n                  onChange={(e) => guardarprecio(Number(e.target.value))}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n              >\r\n                Agregar\r\n              </button>\r\n            </form>\r\n            {cargando ? (\r\n              <p className=\"alert alert-success p2 mt-4 text-center\">\r\n                Cargando\r\n              </p>\r\n            ) : null}\r\n            {error ? (\r\n              <p className=\"alert alert-danger p2 mt-4 text-center\">\r\n                Hubo un error\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevoProducto;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editarProductoAction } from \"../actions/productosAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst EditarProducto = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  //Nuevo state de Producto\r\n  const [producto, guardarProducto] = useState({\r\n    nombre: \"\",\r\n    precio: \"\",\r\n  });\r\n\r\n  //Producto a editar\r\n  const productoeditar = useSelector((state) => state.productos.productoeditar);\r\n\r\n  //LLenar el state automaticamente\r\n  useEffect(() => {\r\n    guardarProducto(productoeditar);\r\n  }, [productoeditar]);\r\n\r\n  //leer los datos del formulario\r\n  const onChageFormulario = (e) => {\r\n    e.preventDefault();\r\n    guardarProducto({\r\n      ...producto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const { nombre, precio } = producto;\r\n\r\n  const submitEditarProducto = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editarProductoAction(producto));\r\n\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"card mt-4\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"text-center mb-4 font-weight-bold\">\r\n              Editar Prodcuto\r\n            </h2>\r\n            <form onSubmit={submitEditarProducto}>\r\n              <div className=\"form-group\">\r\n                <label>Nombre Producto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre Producto\"\r\n                  name=\"nombre\"\r\n                  value={nombre}\r\n                  onChange={onChageFormulario}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Precio Producto</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Precio Producto\"\r\n                  name=\"precio\"\r\n                  value={precio}\r\n                  onChange={onChageFormulario}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n              >\r\n                Guardar Cambios\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditarProducto;\r\n","import {\r\n  AGREGAR_PRODUCTO,\r\n  AGREGAR_PRODUCTO_EXITO,\r\n  AGREGAR_PRODUCTO_ERROR,\r\n  COMENZAR_DESCARGA_PRODUCTOS,\r\n  DESCARGA_PRODUCTOS_EXITO,\r\n  DESCARGA_PRODUCTOS_ERROR,\r\n  OBTENER_PRODUCTO_ELIMINAR,\r\n  PRODUCTO_ELIMINADO_EXITO,\r\n  PRODUCTO_ELIMINADO_ERROR,\r\n  OBTENER_PRODUCTO_EDITAR,\r\n  PRODUCTO_EDITADO_EXITO,\r\n  PRODUCTO_EDITADO_ERROR,\r\n} from \"../types\";\r\n\r\n//Cada reducer tiene su propio state\r\nconst initialState = {\r\n  productos: [],\r\n  error: null,\r\n  loading: false,\r\n  productoeliminar: null,\r\n  productoeditar: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case COMENZAR_DESCARGA_PRODUCTOS:\r\n    case AGREGAR_PRODUCTO:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case AGREGAR_PRODUCTO_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        productos: [...state.productos, action.payload],\r\n      };\r\n    case DESCARGA_PRODUCTOS_ERROR:\r\n    case AGREGAR_PRODUCTO_ERROR:\r\n    case PRODUCTO_ELIMINADO_ERROR:\r\n    case PRODUCTO_EDITADO_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case DESCARGA_PRODUCTOS_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        productos: action.payload,\r\n      };\r\n    case OBTENER_PRODUCTO_ELIMINAR:\r\n      return {\r\n        ...state,\r\n        productoeliminar: action.payload,\r\n      };\r\n    case PRODUCTO_ELIMINADO_EXITO:\r\n      return {\r\n        ...state,\r\n        productos: state.productos.filter(\r\n          (producto) => producto.id !== state.productoeliminar\r\n        ),\r\n        productoeliminar: null,\r\n      };\r\n    case OBTENER_PRODUCTO_EDITAR:\r\n      return {\r\n        ...state,\r\n        productoeditar: action.payload,\r\n      };\r\n    case PRODUCTO_EDITADO_EXITO:\r\n      return {\r\n        ...state,\r\n        productoeditar: null,\r\n        productos: state.productos.map((producto) =>\r\n          producto.id === action.payload.id\r\n            ? (producto = action.payload)\r\n            : producto\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../types\";\r\n\r\n//Cada reducer tiene su state\r\nconst initialState = {\r\n  alerta: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case MOSTRAR_ALERTA:\r\n      return {\r\n        ...state,\r\n        alerta: action.payload,\r\n      };\r\n    case OCULTAR_ALERTA:\r\n      return {\r\n        ...state,\r\n        alerta: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport productosReducer from \"./productosReducer\";\r\nimport alertaReducer from \"./alertaReducer\";\r\n\r\nexport default combineReducers({\r\n  productos: productosReducer,\r\n  alerta: alertaReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./Reducers\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    typeof window === \"object\" &&\r\n      typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : (f) => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Components/Header\";\r\nimport Productos from \"./Components/Productos\";\r\nimport NuevoProducto from \"./Components/NuevoProducto\";\r\nimport EditarProducto from \"./Components/EditarProducto\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n//Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Productos} />\r\n            <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\r\n            <Route\r\n              exact\r\n              path=\"/productos/editar/:id\"\r\n              component={EditarProducto}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}